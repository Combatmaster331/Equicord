name: Test Patches
on:
    workflow_dispatch:
    schedule:
        # Every day at midnight
        - cron: 0 0 * * *

jobs:
    DetermineRunner:
        name: Determine Runner
        runs-on: ubuntu-latest
        outputs:
          runner: ${{ steps.set-runner.outputs.runner }}
        steps:
          - name: Determine which runner to use
            id: set-runner
            uses: benjaminmichaelis/get-soonest-available-runner@v1.1.0
            with:
              primary-runner: "self-hosted"
              fallback-runner: "ubuntu-latest"
              min-available-runners: 1
              github-token: ${{ secrets.ETOKEN }}

    TestPlugins:
        name: Test Patches
        if: github.repository == 'Equicord/Equicord'
        needs: DetermineRunner
        runs-on: ${{ needs.DetermineRunner.outputs.runner }}

        steps:
            - uses: actions/checkout@v3
              if: ${{ github.event_name == 'schedule' }}
              with:
                  ref: dev

            - uses: actions/checkout@v3
              if: ${{ github.event_name == 'workflow_dispatch' }}

            - uses: pnpm/action-setup@v2 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 19
              uses: actions/setup-node@v3
              with:
                  node-version: 19
                  cache: "pnpm"

            - name: Install dependencies
              run: |
                  pnpm install --frozen-lockfile
                  pnpm add puppeteer

                  sudo apt-get install -y chromium-browser

            - name: Build web
              run: pnpm buildWeb --standalone --dev

            - name: Create Report
              timeout-minutes: 10
              run: |
                  export PATH="$PWD/node_modules/.bin:$PATH"
                  export CHROMIUM_BIN=$(which chromium-browser)

                  esbuild scripts/generateReport.ts > dist/report.mjs
                  node dist/report.mjs >> $GITHUB_STEP_SUMMARY
              env:
                  DISCORD_TOKEN: ${{ secrets.DTOKEN }}
                  DISCORD_WEBHOOK: ${{ secrets.WEBHOOK }}

            - name: Create Report (Canary)
              timeout-minutes: 10
              if: success() || failure() # even run if previous one failed
              run: |
                  export PATH="$PWD/node_modules/.bin:$PATH"
                  export CHROMIUM_BIN=$(which chromium-browser)
                  export USE_CANARY=true

                  esbuild scripts/generateReport.ts > dist/report.mjs
                  node dist/report.mjs >> $GITHUB_STEP_SUMMARY
              env:
                  DISCORD_TOKEN: ${{ secrets.DTOKEN }}
                  DISCORD_WEBHOOK: ${{ secrets.WEBHOOK }}
